# Generated by Django 4.1.2 on 2022-10-25 18:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brawler',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Gadget',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('brawler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_brawl_stats.brawler')),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('tag', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='Player tag identificator.')),
                ('name', models.CharField(max_length=50, verbose_name='Player name.')),
                ('name_color', models.CharField(max_length=50, verbose_name="Player's name color HEX code.")),
                ('icon', models.CharField(max_length=50, verbose_name='Player icon id.')),
                ('trophies', models.IntegerField(default=0, verbose_name='Player actual trophies.')),
                ('highest_trophies', models.IntegerField(default=0)),
                ('highest_power_play_points', models.IntegerField(default=0)),
                ('exp_level', models.IntegerField(default=0, verbose_name='Experience level.')),
                ('exp_points', models.IntegerField(default=0, verbose_name='Experience points.')),
                ('is_qualified_from_championship_challenge', models.BooleanField(default=False)),
                ('solo_victories', models.IntegerField(default=0, verbose_name='Singleplayer total victories.')),
                ('duo_victories', models.IntegerField(default=0, verbose_name='Duo total victories.')),
                ('normal_victories', models.IntegerField(default=0, verbose_name='3vs3 total victories.')),
                ('best_time_robo_rumble', models.IntegerField(default=0, verbose_name='Best time in Robo Rumble game mode.')),
                ('best_time_big_brawler', models.IntegerField(default=0, verbose_name='Best time in Big Brawler game mode.')),
                ('club_tag', models.CharField(max_length=20, verbose_name='Club tag identificator.')),
                ('club_name', models.CharField(max_length=20, verbose_name='Club name.')),
            ],
        ),
        migrations.CreateModel(
            name='StarPower',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('brawler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_brawl_stats.brawler')),
            ],
        ),
        migrations.CreateModel(
            name='UnlockedStarPower',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brawler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_brawl_stats.brawler')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_brawl_stats.player')),
                ('star_power', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_brawl_stats.starpower')),
            ],
        ),
        migrations.CreateModel(
            name='UnlockedGadget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brawler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_brawl_stats.brawler')),
                ('gadget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_brawl_stats.gadget')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_brawl_stats.player')),
            ],
        ),
        migrations.CreateModel(
            name='BrawlersHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('power', models.IntegerField(default=0)),
                ('rank', models.IntegerField(default=0)),
                ('trophies', models.IntegerField(default=0)),
                ('highestTrophies', models.IntegerField(default=0)),
                ('brawler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_brawl_stats.brawler')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='my_brawl_stats.player')),
            ],
        ),
        migrations.AddConstraint(
            model_name='unlockedstarpower',
            constraint=models.UniqueConstraint(fields=('player', 'brawler', 'star_power'), name='unique_player_brawler_starpower_constraint'),
        ),
        migrations.AddConstraint(
            model_name='unlockedgadget',
            constraint=models.UniqueConstraint(fields=('player', 'brawler', 'gadget'), name='unique_player_brawler_gadget_constraint'),
        ),
        migrations.AddConstraint(
            model_name='brawlershistory',
            constraint=models.UniqueConstraint(fields=('date', 'brawler', 'player'), name='unique_date_brawler_player_constraint'),
        ),
    ]
